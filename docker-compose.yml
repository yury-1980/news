version: "3.9"

networks:
  app-network:
    external: true

services:
  config:
    container_name: config
    image: config
    build:
      context: ./config
      dockerfile: Dockerfile
    environment:
      PORT: 8888
      server_port: 8888
    ports:
      - 8888:8888
    networks:
      - app-network
    healthcheck:
      test: curl --fail http://localhost:8888/actuator/health || exit 1
      interval: 30s
      retries: 5
      timeout: 10s
      start_period: 1m

  news_comment:
    container_name: news_comment
    image: news_comment
    build:
      context: ./news-comment
      dockerfile: Dockerfile
    environment:
      PORT: 8080
      server_port: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/news
      SPRING_PROFILES_ACTIVE: docker,prod
      SPRING_CONFIG_IMPORT: configserver:http://config:8888
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
      config:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    container_name: news
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: news
      POSTGRES_USER: postgres
    ports:
      - '5432:5432'
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]

  user_role:
    container_name: user_role
    image: user_role
    build:
      context: ./user-role
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db_users:5432/users
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVICE_IMPORT: configserver:http://config:8888
    ports:
      - 8081:8081
    depends_on:
      db_users:
        condition: service_healthy
      config:
        condition: service_healthy
    networks:
      - app-network

  db_users:
    image: postgres:16-alpine
    container_name: db_users
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users
      POSTGRES_USER: postgres
    ports:
      - '5433:5432'
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
