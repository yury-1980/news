plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id "io.freefair.lombok" version "8.4"
}

group = 'ru.clevertec'
version = '0.0.1-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'

java {
	sourceCompatibility = JavaLanguageVersion.of(17)
	targetCompatibility = JavaLanguageVersion.of(17)
}

repositories {
	mavenLocal()
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
	mapstructVersion = '1.5.5.Final'

}

dependencies {
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'


	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

//	implementation 'ru.clevertec:exeption-starter:1.0'

	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql'

	implementation platform('org.hibernate.search:hibernate-search-bom:7.0.0.Final')

	implementation 'org.hibernate.search:hibernate-search-backend-lucene'
	implementation 'org.hibernate.search:hibernate-search-mapper-orm'

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.liquibase:liquibase-core'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'org.wiremock', name: 'wiremock-standalone', version:'3.3.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs << "-parameters"
}

tasks.named('test') {
	useJUnitPlatform()
}
